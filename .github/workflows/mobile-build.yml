name: üì± Mobile Build & Deploy

on:
  push:
    branches: [ main, develop ]
    paths: [ 'apps/mobile/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'apps/mobile/**' ]
  workflow_dispatch:

jobs:
  # ===== FLUTTER BUILD =====
  build-android:
    name: ü§ñ Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install dependencies
        run: |
          cd apps/mobile
          flutter pub get

      - name: Run tests
        run: |
          cd apps/mobile
          flutter test

      - name: Build APK
        run: |
          cd apps/mobile
          flutter build apk --release

      - name: Build App Bundle
        run: |
          cd apps/mobile
          flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: apps/mobile/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-aab
          path: apps/mobile/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: üçé Build iOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install dependencies
        run: |
          cd apps/mobile
          flutter pub get

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install CocoaPods
        run: |
          cd apps/mobile/ios
          pod install

      - name: Build iOS
        run: |
          cd apps/mobile
          flutter build ios --release --no-codesign

      - name: Archive iOS app
        run: |
          cd apps/mobile/ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath build/Runner.xcarchive \
            archive

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-archive
          path: apps/mobile/ios/build/Runner.xcarchive

  # ===== WEB BUILD =====
  build-web:
    name: üåê Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install dependencies
        run: |
          cd apps/mobile
          flutter pub get

      - name: Build Web
        run: |
          cd apps/mobile
          flutter build web --release

      - name: Upload Web artifact
        uses: actions/upload-artifact@v3
        with:
          name: flutter-web
          path: apps/mobile/build/web/

  # ===== DEPLOY TO FIREBASE =====
  deploy-firebase:
    name: üî• Deploy to Firebase
    runs-on: ubuntu-latest
    needs: [build-web]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Web artifact
        uses: actions/download-artifact@v3
        with:
          name: flutter-web
          path: apps/mobile/build/web/

      - name: Setup Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: |
          cd apps/mobile
          firebase deploy --only hosting --project evolveyou-prod --token ${{ secrets.FIREBASE_TOKEN }}

  # ===== DEPLOY TO STORES =====
  deploy-android:
    name: ü§ñ Deploy Android
    runs-on: ubuntu-latest
    needs: [build-android]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: android-aab
          path: ./

      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.evolveyou.app
          releaseFiles: app-release.aab
          track: internal
          status: completed

  deploy-ios:
    name: üçé Deploy iOS
    runs-on: macos-latest
    needs: [build-ios]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download iOS archive
        uses: actions/download-artifact@v3
        with:
          name: ios-archive
          path: ./

      - name: Setup App Store Connect API
        run: |
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > AuthKey.p8

      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file Runner.xcarchive \
            --apiKey ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }} \
            --apiIssuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

  # ===== NOTIFICATION =====
  notify-mobile:
    name: üì¢ Notify Mobile Deploy
    runs-on: ubuntu-latest
    needs: [deploy-firebase, deploy-android, deploy-ios]
    if: always()
    steps:
      - name: Notify success
        if: needs.deploy-firebase.result == 'success'
        run: |
          echo "‚úÖ Mobile apps deployed successfully!"

      - name: Notify failure
        if: failure()
        run: |
          echo "‚ùå Mobile deployment failed! Check the logs."
          exit 1

